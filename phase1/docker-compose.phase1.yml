services:
  # ======================================
  # Conductor
  # ======================================
  # Conductor is a lightweight Alpine-based container that automates configuration tasks and initialization events
  # All scripts can be view from the repos conductorScripts folder
  #
  # .
  # └── conductorScripts/
  #   ├── /deployment
  #   └── /services
  #
  # - Services contains modular scripts for individual service setup tasks. Each file is named according to its purpose, with inline comments documenting the code.
  # - Deployments contains scripts that execute service scripts sequentially based on the deployment configuration. These also include custom post-deployment logs with essential next steps for the deployment scenario.
  #
  # For more info see the follow documentation: https://main--overturedev.netlify.app/docs/other-software/conductor/
  # --------------------------------------
  conductor:
    image: alpine/curl:8.8.0
    container_name: conductor
    ports:
      - "9204:9204"
    volumes:
      - ./phase1/configurationFiles/elasticsearchConfigs/composition_index_template.json:/usr/share/elasticsearch/config/composition_index_template.json
      - ./phase1/configurationFiles/elasticsearchConfigs/instrument_index_template.json:/usr/share/elasticsearch/config/instrument_index_template.json
      - ./phase1/scripts:/scripts
      - ./phase1/health:/health
    command: >
      sh -c '
        set -e
            echo "Running phase One platform deployment..."
            chmod +x scripts/deployments/phase1.sh
            scripts/deployments/phase1.sh
        exit 0
      '
    healthcheck:
      test: ["CMD", "test", "-f", "/health/conductor_health"]
      interval: 5s
      timeout: 40s
      retries: 100
      start_period: 30s
    networks:
      - conductor-network

  # ======================================
  # Elasticsearch
  # ======================================
  # Search and analytics engine used to help query massive datasets flexibly and efficiently.
  # Documentation Link: https://www.overture.bio/documentation/guides/deployment/dataportal/#setting-up-elasticsearch
  # --------------------------------------
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.1
    container_name: elasticsearch
    platform: linux/amd64
    ports:
      - "9200:9200"
    environment:
      PUID: 3381
      PGID: 100
      discovery.type: single-node
      cluster.name: workflow.elasticsearch
      ES_JAVA_OPTS: -Xms4g -Xmx4g
      ELASTIC_PASSWORD: myelasticpassword
      xpack.security.enabled: "true"
      MANAGE_INDEX_TEMPLATES: "true"
      NETWORK_HOST: http://localhost:9200
      bootstrap.memory_lock: "true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    deploy:
      resources:
        limits:
          cpus: '6'
          memory: 16G
        reservations:
          cpus: '2'
          memory: 8G
    volumes:
      - ./phase1/volumes/es-data:/usr/share/elasticsearch/data
      - ./phase1/volumes/es-logs:/usr/share/elasticsearch/logs
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "10"
    healthcheck:
      test: "curl --silent --fail localhost:9200/_cluster/health?wait_for_status=yellow&timeout=50s || exit 1"
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 25s
    networks:
      - conductor-network

  # ======================================
  # Arranger-Server compositions
  # ======================================
  # Search API generation with compatible search UI components
  # Documentation Link: https://www.overture.bio/documentation/guides/deployment/dataportal/#running-arranger
  # --------------------------------------
  arranger-composition:
    image: ghcr.io/overture-stack/arranger-server:3.0.0-beta.36
    container_name: arranger-composition
    platform: linux/amd64
    depends_on:
      conductor:
        condition: service_healthy
    ports:
      - "5050:5050"
    volumes:
     - ./phase1/configurationFiles/arrangerConfigs/compositionConfigs/base.json:/app/modules/server/configs/base.json
     - ./phase1/configurationFiles/arrangerConfigs/compositionConfigs/extended.json:/app/modules/server/configs/extended.json
     - ./phase1/configurationFiles/arrangerConfigs/compositionConfigs/facets.json:/app/modules/server/configs/facets.json
     - ./phase1/configurationFiles/arrangerConfigs/compositionConfigs/matchbox.json:/app/modules/server/configs/matchbox.json
     - ./phase1/configurationFiles/arrangerConfigs/compositionConfigs/table.json:/app/modules/server/configs/table.json
    environment:
      # Arranger Variables
      PORT: 5050
      ENABLE_LOGS: false
      # Elasticsearch Variables
      ES_HOST: http://elasticsearch:9200
      ES_USER: elastic
      ES_PASS: myelasticpassword
      ES_ARRANGER_SET_INDEX: composition_arranger_set
      DEBUG: true
    networks:
      - conductor-network

  # ======================================
  # Arranger-Server instruments
  # ======================================
  # Search API generation with compatible search UI components
  # Documentation Link: https://www.overture.bio/documentation/guides/deployment/dataportal/#running-arranger
  # Check logs on arranger server for manifest columns
  # --------------------------------------
  arranger-instrument:
    image: ghcr.io/overture-stack/arranger-server:3.0.0-beta.36
    container_name: arranger-instrument
    platform: linux/amd64
    depends_on:
      conductor:
        condition: service_healthy
    ports:
      - "5051:5051"
    volumes:
     - ./phase1/configurationFiles/arrangerConfigs/instrumentConfigs/base.json:/app/modules/server/configs/base.json
     - ./phase1/configurationFiles/arrangerConfigs/instrumentConfigs/extended.json:/app/modules/server/configs/extended.json
     - ./phase1/configurationFiles/arrangerConfigs/instrumentConfigs/facets.json:/app/modules/server/configs/facets.json
     - ./phase1/configurationFiles/arrangerConfigs/instrumentConfigs/matchbox.json:/app/modules/server/configs/matchbox.json
     - ./phase1/configurationFiles/arrangerConfigs/instrumentConfigs/table.json:/app/modules/server/configs/table.json
    environment:
      # Arranger Variables
      PORT: 5051
      ENABLE_LOGS: false
      # Elasticsearch Variables
      ES_HOST: http://elasticsearch:9200
      ES_USER: elastic
      ES_PASS: myelasticpassword
      ES_ARRANGER_SET_INDEX: instrument_arranger_set
      DEBUG: true
    networks:
      - conductor-network

  # ======================================
  # Stage run this locally
  # ======================================
  # The react-based, front end portal UI for Overture
  # Documentation Link: https://www.overture.bio/documentation/guides/deployment/dataportal/#setting-up-stage
  # --------------------------------------
  stage:
    image: localstageimage:1.0 
    container_name: stage
    pull_policy: never
    platform: linux/arm64/v8
    depends_on:
      conductor:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      # Stage Variables
      NEXTAUTH_URL: http://localhost:3000/api/auth
      NEXT_PUBLIC_LAB_NAME: Prelude Portal
      NEXT_PUBLIC_ADMIN_EMAIL: example@example.com
      NEXT_PUBLIC_DEBUG: true
      NEXT_PUBLIC_SHOW_MOBILE_WARNING: true
      NEXT_PUBLIC_ENABLE_DOWNLOADS: true
      # Composition Arranger Variables
      NEXT_PUBLIC_ARRANGER_COMPOSITION_API: http://localhost:5050/graphql # Updated inline with nginx reverse proxy
      NEXT_PUBLIC_ARRANGER_COMPOSITION_DOCUMENT_TYPE: file
      NEXT_PUBLIC_ARRANGER_COMPOSITION_INDEX: composition_centric
      # Instrument Arranger Variables
      NEXT_PUBLIC_ARRANGER_INSTRUMENT_API: http://localhost:5051/graphql # Updated inline with nginx reverse proxy
      NEXT_PUBLIC_ARRANGER_INSTRUMENT_DOCUMENT_TYPE: file
      NEXT_PUBLIC_ARRANGER_INSTRUMENT_INDEX: instrument_centric
    networks:
      - conductor-network

volumes:
  elasticsearch-data:
    driver: local
    driver_opts:
      device: ./phase1/volumes/es-data
      o: bind
      type: none
  elasticsearch-logs:
    driver: local
    driver_opts:
      device: ./phase1/volumes/es-logs
      o: bind
      type: none

networks:
  conductor-network:
    driver: bridge